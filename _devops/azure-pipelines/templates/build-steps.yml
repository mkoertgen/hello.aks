steps:
# ---- docker ---
- task: CmdLine@2
  displayName: Build $(component) docker image
  inputs:
    script: docker-compose build $(component) 2>&1
  env: # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables
    SONAR_LOGIN: $(sonar.login)

# login & push on master only
- bash: |
    echo $(registryPassword) | docker login \
        $(registryServerName) \
        -u $(registryLogin) \
        --password-stdin
  displayName: 'docker login'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

- task: CmdLine@2
  displayName: Push $(component) docker image
  inputs:
    script: docker-compose push $(component) 2>&1
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops
  # Publish on `master`
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

# ---- helm ---
- task: HelmInstaller@1
  displayName: 'install helm'
  inputs:
    helmVersionToInstall: $(helmVersion)
- bash: |
    helm package \
        --version $(helmChartVersion) \
        --app-version $(imageTag) \
        charts/$(component)
  workingDirectory: $(component)
  displayName: 'helm package'
  failOnStderr: true
# push on master only
- bash: |
    chartPackage=$(ls $(component)-*.tgz)
    az acr helm push \
        -n $(registryName) \
        -u $(registryLogin) \
        -p $(registryPassword) \
        $chartPackage
  workingDirectory: $(component)
  name: helmPush
  displayName: 'az acr helm push'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  failOnStderr: true
